======================================================
Redes de Computadoras I. Asignación I. Sockets
Universidad Simón Bolívar.
(30 de octubre, 2016)
------------------------------------------------------

______________________
Autores
======================
Mathieu E. De Valery F. 10-10193
Marisela A. Del Valle M. 11-10267

______________________
Archivos entregados
======================
1- Makefile: Contiene la especificación para la compilaciónd el programa.
2- tcpechoclient.c: Script principal encargado de crear el socket para comunicarse con el servidor.
3- tcpechoserver.c: Script principal encargado de crear el socket para comunicarse con el cliente.

______________________
Qué hace
======================
        Se encarga de crear un servidor para un sistema de cajeros. El servidor (cajero) inicializa con un
    total disponible de 80000. El usuario (cliente) ingresa la operación que desea realizar junto con un
    código de usuario, el servidor procesa la solicitud y emite la respuesta pertinente. En caso de tratarse
    de un retiro, el servidor decrementa el total disponible, y en caso de llegar a ser menor a 5000, emite un
    mensaje en el servidor y en el cliente que el total disponible es menor a 5000. Si cuando el cliente se
    conecta el cajero tiene menos de 5000, recibe un mensaje de alerta. Si el cliente desea retirar mas de lo
    que el cajero posee, el cajero le envia un mensaje diciendo que no es posible realizar la operacion.
        Para cada operación realizada por parte del cliente, al mismo se le emite un ticket que contiene: hora,
    fecha, operacion, monto y código del usuario correspondientes a la transacción.
        Al momento del cierre del día, el cajero contiene en los archivos correspondientes, las operaciones
    realizadas con: hora, fecha, operación, monto y código de usuario.

______________________
Ejecución
======================
Primeramente hacer:
        > make
    luego:
        Para ejecutar el servidor:
        > ./bsb_svr -l <puerto_bsb_svr> -i <bitácora_deposito> -o <bitácora_retiro>

        Para ejecutar el cliente:
        > ./bsb_cli -d <nombre_modulo_atencion> -p <puerto_bsb_svr> -c <op> -i <codigo_usuario>

Los argumentos pueden ser ingresados en desorden, pero siempre de a pares: el flag acompañado de su valor.

______________________
Limitaciones
======================
Para el cliente:
    - El codigo de usuario no debe contener mas de 8 caracteres
    - Al conectarse puede seleccionar entre 2 opciones (ingresando el numero entero correspondiente):
        1. Retiro/Deposito
        2. Salir
        Cualquier otra opcion obligará al usuario a volver a intentar.
    - Al intentar realizar las operaciones de retiro o deposito, se le solicitará nuevamente el código de
    usuario. Si no coincide con el ingresado en la entrada, el sistema se cerrará automáticamente.
    - Al ingresar el monto de retiro/deposito, si no es un monto valido se solicitará nuevamente. El monto
    ingresado debe ser un numero entre 0 y 99999999999.
    - Sólo se pueden realizar 3 retiros por conexion
    - Si dos clientes están conectados al mismo tiempo, no deben realizar operaciones simultáneas. Por ejemplo,
    si un cliente está realizando una operacion de depósito, el otro cliente debe esperar a que realice el
    depósito ("que se haga efectivo") para seleccionar 1 del menú y realizar un retiro. Si presiona 1 antes de
    tiempo, puede que no se vea reflejada la operacion de depósito.

Para el servidor:
    - Para hacer cierre de caja, se debe ejecutar ctrl+C.
    - En los archivos de log, el total disponible al final del dia queda redondeado a numero entero en caso
    de haber sido depositado/retirado un monto con decimales.
    - En algunos casos muy particulares, si un cliente introduce mal la verificación de codigo de usuario
    ocurre segmentation fault.
